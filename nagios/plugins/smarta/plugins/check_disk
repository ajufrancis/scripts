#! lua

-- check linux disk
-- author: ery.lee@gmail.com from monit.cn

require("plugin")

function check(opts)
  local status = STATUS_OK
  local warn = opts["W"]
  local crit = opts["C"]
  local path = opts["p"]
  local output = os.cmd("df -m "..path)
  pat = "(%d+)%s+(%d+)%s+(%d+)%s+(%d+)%%"  --% 
  total,used,avail,usage = string.match(output, pat)
  if not usage then
    print("UNKNOWN - "..output.."\n")
    return STATUS_UNKNOWN
  end
  usage = tonumber(usage)
  local phrase = "OK"
  if crit and eval("return "..crit) then
    phrase = "CRITICAL"
	status = STATUS_CRITICAL
  elseif warn and eval("return "..warn) then
    phrase = "WARNING"
	status = STATUS_WARNING
  end
  print(string.format("%s - 磁盘占用率: %s%%, 总量: %.2fG", 
    	phrase, usage, total/1000))
  print("graph:usage(%)")
  print("metric:usage: "..usage.."%")
  print("metric:total: "..total.."MB")
  print("metric:used: "..used.."MB")
  print("metric:avail: "..avail.."MB")
  return status
end

function usage() 
  print("Usage: check_disk [-W warn | -C Crit] -p path")
end

-- parse arguments
local long_opts = {
   help    = "h",
   path	   = "p",
   warning = "W",
   critical = "C"
}

-- parse arguments
opts,optind = getopts(arg, "hp:W:C:", long_opts)

if opts["h"] then
  usage()
  return
end

if not opts["p"] then
  print("UNKNOWN - miss argument = 'path'\n")
  usage()
  return
end

status=check(opts)

os.exit(status)
