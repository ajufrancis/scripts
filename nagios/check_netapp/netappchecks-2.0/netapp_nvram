#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#################################################################
#	 _  _ ___ _____ _   ___ ___    ___ _  _ ___ ___ _  __	#
#	| \| | __|_   _/_\ | _ \ _ \  / __| || | __/ __| |/ /	#
#	| .` | _|  | |/ _ \|  _/  _/ | (__| __ | _| (__| ' <	#	
#	|_|\_|___| |_/_/ \_\_| |_|    \___|_||_|___\___|_|\_\	#		
#---------------------------------------------------------------#
# Author: Benjamin Odenthal					#
# Contact: support@tuxclouds.org				#
# File: netapp_nvram						#
# Version: 1.0							#
# Revision: 14.Oct.2010						#
# Description: The purpose of this netapp_nvram is to check	#
# the functionality of the NVRAM Battery via SNMP		#
# As Result you get the 1=OK or 0=CRITICAL			#
#################################################################
netapp_nvram_default_levels = None

def inventory_netapp_nvram(checkname, info):
	inventory = [ ("NVRAM", "", "netapp_nvram_default_levels") ]
        return inventory

def check_netapp_nvram(item, params, info):
	for line in info:
		nvram = int(line[0])
	if nvram == "":
		return (3, "UNKNOWN - check SNMP or OID")
	elif nvram == "1":
		return (2, "CRITICAL - NVRAM Battery defect")
	else:
		return (0, "OK - NVRAM Battery is working fine")
	
check_info["netapp_nvram"] = (check_netapp_nvram, "NetApp", 0, inventory_netapp_nvram)

snmp_info["netapp_nvram"] = ( ".1.3.6.1.4.1.789.1.2.5", ["1"] )

snmp_scan_functions['netapp_nvram'] = \
    lambda oid: oid("1.3.6.1.2.1.1.1.0").startswith('"NetApp Release')
