[[PageOutline]]

= Creating a kickstart template =

This page outlines the different types of SNAKE kickstart templates, and walks through various command-line options for the ''snake-ks'' command.

== Choosing a Template Format ==

Once you have configured snake-server and added installation trees, you are now ready to setup kickstart templates.  SNAKE kickstart templates come in two flavors:

 1. plain/text kickstart files
 1. python pykickstart scripts

=== Plain/text Kickstart Template ===

The first type of kickstart template is the most recognizable.  It is a text file containing a series of kickstart commands (see http://fedoraproject.org/wiki/Anaconda/Kickstart) designed to automate installation.  The most common example is the {{{/root/anaconda-ks.cfg}}} file that is created after every Fedora install.  The {{{/root/anaconda-ks.cfg}}} file contains the commands that were used to install the system you are currently on.  

A sample {{{/root/anaconda-ks.cfg}}} file is shown below:

{{{
# Kickstart file automatically generated by anaconda.

install
url --url http://download.fedora.redhat.com/pub/fedora/linux/releases/9/Fedora/i386/os
lang en_US.UTF-8
keyboard us
xconfig --startxonboot
network --device eth0 --onboot no --bootproto dhcp --hostname flatline
rootpw  --iscrypted $6$BKZnoz1ICSisIZ1i$dV7ZRREsqxKVjSu9qR1jcPEpXAjYzlySrdF1nKBwWTbY2WJrWuGVksLL2oPWzFPlAGV0FWmqQHjLPoei6YFeQ1
firewall --enabled --port=22:tcp
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc America/New_York
bootloader --location=partition --driveorder=sda --append="rhgb quiet"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
#clearpart --linux
#part /boot --fstype ext3 --onpart sda6
#part pv.4 --noformat --onpart sda5
#volgroup linux --noformat --useexisting --pesize=32768 pv.4
#logvol / --useexisting --fstype ext3 --name=rhel_root --vgname=linux --size=12000
#logvol /home --noformat --useexisting --fstype ext3 --name=home --vgname=linux --size=17600
#logvol swap --useexisting --fstype swap --name=swap --vgname=linux --size=992

%packages
@base
}}}

For more details on kickstart syntax and writing kickstart files, please see http://fedoraproject.org/wiki/Anaconda/Kickstart.

=== Python Pykickstart Template ===

The second type of kickstart template uses a python script and pykickstart to generate a kickstart file.  Pykickstart is a python library that is used for reading and writing kickstart files (for further information please see https://fedoraproject.org/wiki/Pykickstart).

  It is a text file containing a series of kickstart commands (see http://fedoraproject.org/wiki/Anaconda/Kickstart) designed to automate installation.  The most common example is the {{{/root/anaconda-ks.cfg}}} file that is created after every Fedora install.  The {{{/root/anaconda-ks.cfg}}} file contains the commands that were used to install the system you are currently on.  

The following example will demonstrate how to build a python pykickstart template with SNAKE.  Our template will be called {{{minimal.py}}} and contains the following:
{{{
#!python
#
# minimal.py - a minimal install template
#

from pykickstart.constants import KS_MISSING_IGNORE
from defaults import Defaults

def ks(**context):
    '''Minimal pytemplate (@base)'''

    ks=Defaults()
    ks.packages.add(['@base'])
    ks.packages.handleMissing = KS_MISSING_IGNORE

    return ks
}}}

Some thoughts ...
 * When processing a python template, SNAKE will only process your template if you define a ''ks'' method.  This method must return a python object with a {{{__str__()}}} method.  In the above example, we are returning an instance of the Defaults class.  This class is defined in [http://git.fedorahosted.org/git/snake?p=snake;a=blob;f=templates/defaults.py;h=0c0b0bfa228944c1bab6fb9c0264aa7f3de48105;hb=HEAD defaults.py] as a subclass of [http://git.fedorahosted.org/git/snake?p=snake;a=blob;f=snake/kickstart.py;h=7a2d4370e9310e8675c8ff3b49ea962bb1800bc7;hb=HEAD#l222 SnakeHandler].  As long as you return an object that inherits from ''SnakeHandler'' in your ''ks'' method, you'll be fine.
 * With pykickstart, all commands are accessible using python objects and methods.  For more information on available commands and their methods, refer to http://jlaska.fedorapeople.org/pykickstart-doc/pykickstart.commands.html.
 * Looking for more examples?  Examples can be found in [http://git.fedorahosted.org/git/snake?p=snake;a=tree;f=templates;hb=HEAD git]

== Adding a Template ==

Now that you have selected a type of SNAKE Kickstart Template, we can go ahead and store that template on the server.  Whether you are using a plain/text template, or a python template, the procedure remains the same.

 1. Let's '''add''' the anaconda generated {{{/root/anaconda-ks.cfg}}} as a kickstart template.  
{{{
# snake-ks add /root/anaconda-ks.cfg 
Added anaconda-ks: Unmodified Kickstart object
}}}
 1. Additionally, we can add the {{{minimal.py}}} pykickstart template we created above.
{{{
# snake-ks add /tmp/minimal.py 
Added minimal: Minimal pytemplate (@base)
}}}

== Query Available Templates ==

Once uploaded, your library of templates can be queried.

 1. We can '''query''' the kickstart files by running:
{{{
# snake-ks list
 Name                      Description                                       
===================================================================          
 anaconda-ks               Unmodified Kickstart object      
}}}
 1. The '''query''' command can optionally filter by template name or description.  For example, to find all templates whose name contain the text ''raid'':
{{{ 
# snake-ks list name=raid
 Name                      Description                                       
===================================================================          
 lvm_on_raid0              Partitioning / LVM on raid0                       
 raid0                     Partitioning / raid0                              
 raid1                     Partitioning / raid1                              
 raid5                     Partitioning / raid5                              
 raid6                     Partitioning / raid6
}}}
 1. Or to '''query''' for templates whose description contains the text ''Partition'':
{{{
# snake-ks list desc=Partition
 Name                      Description                                       
===================================================================          
 ext2                      Partitioning / ext2                               
 ext3                      Partitioning / ext3                               
 luks-lvm-lvs              Partitioning / Encryption / LVM Logical Volumes   
 luks-lvm-mix              Partitioning / Encryption / LVM Physical+Logical Volumes
 luks-lvm-pvs              Partitioning / Encryption / LVM Physical Volumes  
 lvm                       Partitioning / LVM (multiple pv's)                
 lvm_on_raid0              Partitioning / LVM on raid0                       
 raid0                     Partitioning / raid0                              
 raid1                     Partitioning / raid1                              
 raid5                     Partitioning / raid5                              
 raid6                     Partitioning / raid6                              
 swap_on_lvm               Partitioning / LVM (multiple pv's)                
}}}

== Generate a Kickstart ==

Once you've added your template, it's time to test your changes.  We'll select a recently uploaded SNAKE template, {{{minimal.py}}}, as an example.

The {{{snake-ks}}} command allows you to build a kickstart file from the SNAKE template.  While that may not seem very special, the power comes from the SNAKE server's ability to generate your kickstart file for the Fedora, or RHEL, release you are installing.  The kickstart API changes from release to release.  In order to maintain sanity, SNAKE works with pykickstart to allow your kickstart template to work for different versions of the kickstart API.

For example, let's ask snake to generate a the ''minimal'' template we uploaded earlier.
{{{
$ snake-ks generate minimal
# kickstart automatically generated by SNAKE.
# Please don't modify the following two lines.
# Description: Minimal pytemplate (@base)
# Version: 7000

#version=F9
# Root password
rootpw --iscrypted $1$xafj7qlW$6swjxMwu0po47drJVRcIZ/
# Firewall configuration
firewall --disabled
# System keyboard
keyboard us
# System language
lang en_US
# Reboot after installation
reboot
# System timezone
timezone --isUtc America/New_York
# System bootloader configuration
bootloader --location=mbr
autopart
# Partition clearing information
clearpart --all --initlabel 

%post
wget -O - http://jlaska.fedorapeople.org/snake/setup.sh | sh
%end

%packages --ignoremissing
@base
%end
}}}

With no other arguments provided, SNAKE generated the kickstart file as the current '''devel''' version kickstart.  Let's try the same template, but built for Red Hat Enterprise Linux 4.

{{{
# snake-ks generate --version RHEL4 minimal
# kickstart automatically generated by SNAKE.
# Please don't modify the following two lines.
# Description: Minimal pytemplate (@base)
# Version: 1100

#version=RHEL4
# Firewall configuration
firewall --disabled
# System keyboard
keyboard us
# System language
lang en_US
langsupport --default=en_US.UTF-8 en_US.UTF-8
# Reboot after installation
reboot
# Root password
rootpw --iscrypted $1$xafj7qlW$6swjxMwu0po47drJVRcIZ/
# System timezone
timezone --utc America/New_York
# System bootloader configuration
bootloader --linear --location=mbr
autopart
# Partition clearing information
clearpart --all --initlabel 

%post
wget -O - http://jlaska.fedorapeople.org/snake/setup.sh | sh

%packages --ignoremissing
@base
}}}

Take note of the following differences between the '''devel'' and '''RHEL4''' versions of the generated kickstart file:
 * '''langsupport''' - a required command in the RHEL4 kickstart API is no longer needed
 * '''--isUtc''' vs '''--utc''' - kickstart command options can change between API's
 * '''%end''' - newer versions of the kickstart API require closing %pre, %post, and %package blocks.

For an explanation of additional parameters to the {{{snake-ks generate}}} command, please refer to the documentation (https://fedorahosted.org/snake/browser/docs/snake-ks.pod).

== Removing a Template ==

Not surprising, you can '''remove''' kickstart files using {{{snake-ks}}} as well.  The following example removes the SNAKE template {{{anaconda-ks}}} from the server.

{{{
# snake-ks remove anaconda-ks
 Name                      Description                                       
===================================================================          
Removing:
 anaconda-ks               Unmodified Kickstart object                       

Is this ok [y/N]: y
Removed anaconda-ks: Unmodified Kickstart object
}}}
